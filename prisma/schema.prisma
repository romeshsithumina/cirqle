// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model Issue {
  id           Int          @id @default(autoincrement())
  uuid         String       @unique
  title        String
  description  String?
  status       String       @default("todo")
  priority     String
  type         String
  author       User         @relation(name: "Author", fields: [authorId], references: [id])
  authorId     Int
  assignedTo   User?        @relation(name: "AssignedTo", fields: [assignedToId], references: [id], onUpdate: NoAction, onDelete: NoAction)
  assignedToId Int?
  project      Project      @relation(fields: [projectId], references: [id])
  projectId    Int
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @default(now()) @updatedAt
  attachments  Attachment[]
}

model User {
  id             Int      @id @default(autoincrement())
  clerkID        String
  name           String
  email          String   @unique
  password       String?
  role           String
  picture        String
  issues         Issue[]  @relation(name: "Author")
  assignedIssues Issue[]  @relation(name: "AssignedTo")
  createdAt      DateTime @default(now())
  updatedAt      DateTime @default(now()) @updatedAt
}

model Project {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  issues      Issue[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
}

model Attachment {
  id        Int      @id @default(autoincrement())
  issue     Issue    @relation(fields: [issueId], references: [id])
  issueId   Int
  filename  String
  mimetype  String
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}
